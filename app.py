

import telebot # –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É

from config import keys, TOKEN # –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É
from extensions import ConvertionException, CryptoConverter # –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É


bot = telebot.TeleBot(TOKEN)




@bot.message_handler(commands=['start', 'help']) #
def start(message: telebot.types.Message):   #
    text = "üëã –ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–∞–Ω–¥—É –±–æ—Ç—É –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ: \n<–∏–º—è –≤–∞–ª—é—Ç—ã> \n<–≤ –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ > \n<–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–≤–æ–¥–∏–º–æ–π –≤–∞–ª—é—Ç—ã> \n–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç: /values ." # —Å–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    bot.reply_to(message, text)


@bot.message_handler(commands=['values'])  # —Å–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã
def values(message: telebot.types.Message): # —Å–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
    text = "–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:" # —Å–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    for key in keys.keys(): # —Å–æ–∑–¥–∞–µ–º —Ü–∏–∫–ª
        text = '\n'.join((text, key)) # –¥–æ–±–∞–≤–ª—è–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    bot.reply_to(message, text)  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é



@bot.message_handler(content_types=['text', ])  # —Å–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞
def convert(message: telebot.types.Message):
    try:
        values = message.text.split(' ') # —Å–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        if len(values) != 3: # —Å–æ–∑–¥–∞–µ–º —É—Å–ª–æ–≤–∏–µ
            raise ConvertionException('–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.') # —Å–æ–∑–¥–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ

    # if quote == base: # —Å–æ–∑–¥–∞–µ–º —É—Å–ª–æ–≤–∏–µ
    #     raise ConvertionException(f'–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –≤–∞–ª—é—Ç—ã {base}.') # —Å–æ–∑–¥–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
        quote, base, amount = values  # —Å–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        total_base = CryptoConverter.convert(quote, base, amount)

    except ConvertionException as e: # —Å–æ–∑–¥–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
        bot.reply_to(message, f'–û—à–∏–±–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n{e}') # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    except Exception as e: #—Å–æ–∑–¥–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
        bot.reply_to(message, f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É\n{e}')
    else: # —Å–æ–∑–¥–∞–µ–º —É—Å–ª–æ–≤–∏–µ
        text = f'–¶–µ–Ω–∞ {amount} {quote} –≤ {base} - {total_base}'
        bot .send_message(message.chat.id, text)

  






bot.polling(none_stop=True)  #